# rule-name
name: openMultiMessageDialog
# rule-group
group: showModalDialog

# file suffix of include/exlude
include-suffix: jsp|html
exclude-suffix: 

# regex pattern   
pattern: (?P<indent>[ ]*)if\((?P<call>openMultiMessageDialog)\((?P<param>[^{]+)\)\s*\)\s*\{(?P<process>[^}]+?)\}
# export match template
export-template-header: | 
  matches.count: ${matches.count}, groups.count: ${groups.count}, groups.keys: ${groups.keys}
  indent | call | param | process
  |--|--|--|
  
export-template-content: | 
  ${indent} | ${call} | ${param} | ${process}

export-template-footer: | 
  "--"
  
# TODO:
#  #GROUP-LOOP-START#
#    ${group.key}: ${${group.index}}
#  #GROUP-LOOP-END#

# replace match template
replace-template: |
  ${indent}${call}(${param}, "callbackForRetunWindow");
  ${indent}window["callbackForRetunWindow"] = function (res){
  ${indent}  if(res){${process}}
  ${indent}}

# match destination range(spos=startIndex, epos=endIndex + endLength) 
# if range_start is empty then spos=0
# if range_end is empty then epos=length(full) or ahead of next range_start
# optional: if groupname is included in pattern, 
#  { match.group.name: match.group.nalue } will be saved in ${match_params_map}
range_start: \nfunction\s+(?P<function>\w+)\(form\)\s*\{.+?\n\}
range_end:

# before replace process: check full content skip or do.
# priority descend: skip_ifany, skip_when, do_ifany, do_when
# if any true return skip/do;
# optional: if groupname is included in pattern, 
#  { match.group.name: match.group.nalue } will be saved in ${full_params_map}
full_patterns :
  skip_ifany: []
  skip_when: []
  do_ifany: 
    - "DOCTYPE HTML PUBLIC"
    - "swtag:html"
    - "meta http-equiv"
  do_when: []

# before replace process: check full content skip or do.
# priority descend: skip_ifany, skip_when, do_ifany, do_when
# if any true return skip/do;
# optional: if groupname is included in pattern, 
#  { match.group.name: match.group.nalue } will be saved in ${match_params_map}
range_patterns:
  skip_ifany: []
  skip_when: []
  do_ifany: []
  do_when: []

# before replace process: check skip or do replace conditions
match_patterns:
  skip_ifany: []
  skip_when: []
  do_ifany: []
  do_when: []

# process for refreshing params
# support functions: 
#  string: len(string), ucase(string), lcase(string)
#  number: +,-,*,/
#  compare: <, <=, >, >=, ==
match_formulas: []

match_evals:
  skip_ifany: []
  skip_when: []
  do_ifany: []
  do_when: []
