kind: regex-rules

regex-rule-define: &default-rule
  # rule-name
  name: default
  # rule-group
  group: default

  # file name of include/exlude
  #.myapp.yaml is not included.
  include-file: '\w+\.(html|jsp|java|js|css)$'
  exclude-file: '^(log|bak|back|org|\d+).+(log|bak|back|org|\d+)$'  
  
  # match destination range(spos=startIndex, epos=endIndex + endLength) 
  # if range_start is empty then spos=0
  # if range_end is empty then epos=length(full) or ahead of next range_start
  # optional: if groupname is included in pattern, 
  #  { match.group.name: match.group.nalue } will be saved in ${match_params_map}
  range-start: 
  range-end:

  # regex pattern   
  pattern: 

  # check full content by regex match
  full-patterns :
    <<: *default_check_patterns
    # write override here

  # check range content by regex match
  range-patterns: 
    <<: *default_check_patterns
    # write override here


  # check match content by regex match
  match-patterns: 
    <<: *default_check_patterns
    # write override here


  # check match content by evaluate
  match-vals: 
    <<: *default_check_patterns
    # write override here

  # process for refreshing params
  # support functions: 
  #  string: len(string), ucase(string), lcase(string)
  #  number: +,-,*,/
  #  compare: <, <=, >, >=, ==
  match-formulas: []

#=========================
# write your custom rules below.
#=========================
regex-rules:
  - <<: *default-rule  #default-rule
  - <<: *default-rule  #reference anchor defined above by *anchor-name
    name: "dialog1"
    pattern: (?P<indent>[ \t]*)if\s*\((?P<andor>[^\(\)]*)(?P<call>openMultiMessageDialog)\((?P<param>[^{]+)\)\s*\)\s*\{(?P<process>[^}]+?)\}
    range-start: \nfunction\s+(?P<function>\w+)
    #range-end: '\n\}'
    replace-template:
      match : |-  # |: has \n in last row, |- : no \n in last row.  
        ${indent}${call}(${param}, function (res){
        ${indent}  if(${andor}res){${process}}
        ${indent}});
      #match : | 
      #  ${indent}${call}(${param}, "callbackForRetunWindow");
      #  ${indent}window["callbackForRetunWindow"] = function (res){
      #  ${indent}  if(res){${process}}
      #  ${indent}}
  - <<: *default-rule  #reference anchor defined above by *anchor-name
    name: "dialog2if"
    # regex pattern   
    pattern: (?P<indent>[ \t]*)(var\s+)?(?P<var>\w+)\s*=\s*(?P<call>openMultiMessageDialog)\((?P<param>[^{]+)\)\s*;(?P<newline>[^\{\}]+)(?P<if>if\s*)\((?P<andor>[^\(\)]+)\)(?P<process>\s*\{[^}]+?\})
    replace-template:
      match : |-  # |: has \n in last row, |- : no \n in last row.  
        ${indent}${call}(${param}, function (${var}){${newline}${if}(${andor})${process}
        ${indent}});
  - <<: *default-rule  #reference anchor defined above by *anchor-name
    name: "dialog2not"
    # regex pattern   
    pattern: (?P<indent>[ \t]*)if\s*\(!(?P<call>openMultiMessageDialog)\((?P<param>[^\r]+)\)\s*\)\s*\{(?P<process>[^}]+?)\}
    replace-template: 
      match : |-  # |: has \n in last row, |- : no \n in last row.  
        ${indent}${call}(${param}, function (res){
        ${indent}  if(!res){${process}}
        ${indent}});